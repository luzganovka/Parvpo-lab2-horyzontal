#     upstream backend {
# 	server consumer_1:8080 max_fails=300;
# 	server consumer_2:8080 max_fails=300;
#     }
# 
#     server {
# 	listen 8080;
# 	root /;
#         location / {
#         proxy_pass https://backend;
#         }
#     }

##upstream goapp {
##    server consumer_1:8080 max_fails=30000000 fail_timeout=30s;
##    # server consumer_2:8080 max_fails=30000000 fail_timeout=30s;
##    # hash $binary_remote_addr$msec; # consistent;
##    # least_conn;
##}
##
##server {
##    listen 8080;
##    #server_name example.com;
##
##    location / {
##        proxy_pass http://goapp;
##    }
##}

server {
    listen 8080;
    #server_name example.com;

    location / {
	    mirror /mirror1;
	    mirror /mirror2;
	    mirror_request_body on;
		proxy_set_header pid "0";
		proxy_set_header p_num "3";
        proxy_pass http://consumer_1:8080/;
    }
    location /mirror1 {
        # set $new_request_uri "/";
		internal;
		proxy_set_header pid "1";
		proxy_set_header p_num "3";
		proxy_pass http://consumer_2:8080/;
		proxy_pass_request_body on;
    }
    location /mirror2 {
		internal;
		proxy_set_header pid "2";
		proxy_set_header p_num "3";
		proxy_pass http://consumer_3:8080/;
		proxy_pass_request_body on;
    }

	location /end {
	    mirror /mirror1/end;
	    mirror /mirror2/end;
	    mirror_request_body on;
		proxy_set_header pid "0";
		proxy_set_header p_num "3";
        proxy_pass http://consumer_1:8080/end;
    }
    location /mirror1/end {
        # set $new_request_uri "/";
		internal;
		proxy_set_header pid "1";
		proxy_set_header p_num "3";
		proxy_pass http://consumer_2:8080/end;
		proxy_pass_request_body on;
    }
    location /mirror2/end {
		internal;
		proxy_set_header pid "2";
		proxy_set_header p_num "3";
		proxy_pass http://consumer_3:8080/end;
		proxy_pass_request_body on;
    }
}
#             set $new_request_uri $request_uri;
#
#            if ($request_uri ~ ^/app1/(.+)$) {
#                set $new_request_uri $1;
#            }
#
#            proxy_pass http://example.com/app1/$new_request_uri;
